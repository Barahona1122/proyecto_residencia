/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import conexiones.ProyectoResidencia;
import java.awt.BorderLayout;
import java.awt.Color;
import java.io.File;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import proyectoresidencia.Exportar_excel;
import proyectoresidencia.FondoAdmin;

/**
 *
 * @author Carlos Barahona
 */
public class Estadistica_Subcategoria extends javax.swing.JInternalFrame {

    /**
     * Creates new form Estadistica_Subcategoria
     */
    public Estadistica_Subcategoria() {
        initComponents();
        
        BUSCAR_FECHA.setVisible(false);
        FECHA_1.setVisible(false);
        FECHA_2.setVisible(false);
        //llenar();
        //------------------------------------------------IMAGEN DE FONDO
        FondoAdmin p = new FondoAdmin("paso.jpg"); 
this.add( p , BorderLayout.EAST); 
p.repaint();

//--------------ICONO PARA EL CALENDARIO
URL url = getClass().getResource("/iconos/calendario.png");  
FECHA_1.setIcon(new ImageIcon(url)); 
URL url2 = getClass().getResource("/iconos/calendario.png");  
FECHA_2.setIcon(new ImageIcon(url2)); 
     
admin();

COMBO_USUARIO.setVisible(false);
BUS.setVisible(false);
    }
    
    private void admin(){
    try{
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery("select nombre, id_usuario from usuario where id_perfil=3"); 
    String [] datos = new String[2];
    while(rs.next()){
        
        datos[0]=rs.getString("nombre");
        this.COMBO_USUARIO.addItem(datos[0]);
          }
    }catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERROR"+e);
    }  
    }
    

   /* public void llenar(){
    
    String [] titulos  = {"NÃºmero peticiones", "Categoria","SubCategoria" };
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    String sql = "select Peticiones, nombre_categoria, nombre_subcategoria from vwsubcategoria";
        try{
       Statement st = con.createStatement();
       ResultSet rs = st.executeQuery(sql);
       String [] datos = new String [4];
       
       while(rs.next()){
       datos[0] = rs.getString("Peticiones");
       datos[1] = rs.getString("nombre_categoria");
       datos[2] = rs.getString("nombre_subcategoria");
       
       modelo.addRow(datos);
       
       }
       
        
        }catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERROR"+"MSG"+JOptionPane.WARNING_MESSAGE+e);
    }
    }*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        COMBO_BUSCA = new javax.swing.JComboBox();
        FECHA_1 = new com.toedter.calendar.JDateChooser();
        FECHA_2 = new com.toedter.calendar.JDateChooser();
        BUSCAR_FECHA = new javax.swing.JButton();
        COMBO_USUARIO = new javax.swing.JComboBox();
        BUS = new javax.swing.JButton();
        backgroundMenuBar1 = new proyectoresidencia.BackgroundMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem1 = new javax.swing.JMenuItem();

        setClosable(true);
        setIconifiable(true);
        setTitle("Reporte de solicitudes");

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(0, 102, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Buscar");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        COMBO_BUSCA.setBackground(new java.awt.Color(51, 51, 255));
        COMBO_BUSCA.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Buscar por...", "General", "Persona" }));
        COMBO_BUSCA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        FECHA_1.setDateFormatString("yyyy-MM-dd");

        FECHA_2.setDateFormatString("yyyy-MM-dd");

        BUSCAR_FECHA.setBackground(new java.awt.Color(0, 102, 153));
        BUSCAR_FECHA.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        BUSCAR_FECHA.setForeground(new java.awt.Color(255, 255, 255));
        BUSCAR_FECHA.setText("Buscar");
        BUSCAR_FECHA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BUSCAR_FECHA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUSCAR_FECHAActionPerformed(evt);
            }
        });

        COMBO_USUARIO.setBackground(new java.awt.Color(51, 51, 255));
        COMBO_USUARIO.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar usuario..." }));
        COMBO_USUARIO.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        BUS.setBackground(new java.awt.Color(0, 102, 153));
        BUS.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        BUS.setForeground(new java.awt.Color(255, 255, 255));
        BUS.setText("Buscar");
        BUS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BUS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BUSActionPerformed(evt);
            }
        });

        backgroundMenuBar1.setInheritsPopupMenu(true);

        jMenu2.setText("Archivo");
        jMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu2.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Guardar como");
        jMenuItem3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);
        jMenu2.add(jSeparator1);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Salir");
        jMenuItem1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        backgroundMenuBar1.add(jMenu2);

        setJMenuBar(backgroundMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(COMBO_BUSCA, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(COMBO_USUARIO, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BUS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FECHA_1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FECHA_2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BUSCAR_FECHA)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(COMBO_BUSCA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(COMBO_USUARIO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BUS))
                    .addComponent(FECHA_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FECHA_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BUSCAR_FECHA))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

      String busca = COMBO_BUSCA.getSelectedItem().toString();
      if(busca.equals("General")){ //---------------------CUANDO SE SELECCIONE LA OPCION GENERAL
COMBO_USUARIO.setVisible(false);
BUS.setVisible(false);
          
          
        BUSCAR_FECHA.setVisible(true);
        FECHA_1.setVisible(true);
        FECHA_2.setVisible(true);
          
          
      String [] titulos  = {"Fecha inicial","Fecha final","Total peticiones","Total dias", "Categoria","SubCategoria" };
           
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(230);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(300);
    
    
     GregorianCalendar objFecha = new GregorianCalendar();
      int mes;
  mes=objFecha.get(Calendar.MONTH)+1;
    String sql = "select fecha_in_nohora, fecha_fin_nohora, Peticiones, sumdias, nombre_categoria, nombre_subcategoria from vwsubcategoria where month(fecha_in_nohora)='"+mes+"'";
        try{
       Statement st = con.createStatement();
       ResultSet rs = st.executeQuery(sql);
       String [] datos = new String [6];
       
       while(rs.next()){
       datos[0] = rs.getString("fecha_in_nohora");    
       datos[1] = rs.getString("fecha_fin_nohora");
       datos[2] = rs.getString("Peticiones");
       datos[3] = rs.getString("sumdias");
       datos[4] = rs.getString("nombre_categoria");
       datos[5] = rs.getString("nombre_subcategoria");

       
       modelo.addRow(datos);
       
       }
       
        
        }catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERROR"+"MSG"+JOptionPane.WARNING_MESSAGE+e);
    }
  }  
      
      if(busca.equals("Persona")){  //---------------------CUANDO SE SELECCIONE LA OPCION PERSONA    
COMBO_USUARIO.setVisible(true);
BUS.setVisible(true);
          
           BUSCAR_FECHA.setVisible(true);
        FECHA_1.setVisible(true);
        FECHA_2.setVisible(true);
          
      String [] titulos  = {"Fecha inicial","Fech final","Total peticiones","Total dÃ­as", "Categoria","SubCategoria", "Atendido por" };
           
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    
    jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(230);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(300);
         jTable1.getColumnModel().getColumn(6).setPreferredWidth(80);
    
    GregorianCalendar objFecha = new GregorianCalendar();
      int mes;
  mes=objFecha.get(Calendar.MONTH)+1;
    String sql = "select fecha_in_nohora, fecha_fin_nohora, total, sumdias, nombre_categoria, nombre_subcategoria, atendio from estadistico where month(fecha_in_nohora)='"+mes+"'";
        try{
       Statement st = con.createStatement();
       ResultSet rs = st.executeQuery(sql);
       String [] datos = new String [7];     
      while(rs.next()){
       datos[0] = rs.getString("fecha_in_nohora");    
       datos[1] = rs.getString("fecha_fin_nohora");
       datos[2] = rs.getString("total");
       datos[3] = rs.getString("sumdias");
       datos[4] = rs.getString("nombre_categoria");
       datos[5] = rs.getString("nombre_subcategoria");
       datos[6] = rs.getString("atendio");      
       modelo.addRow(datos);
       }  
        }catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERROR"+"MSG"+JOptionPane.WARNING_MESSAGE+e);
    }
      }
      
      if(busca.equals("Buscar por...")){ //-------------------CUANDO SE SELECCIONE LA OPCION BUSCAR POR..
      BUSCAR_FECHA.setVisible(false);
        FECHA_1.setVisible(false);
        FECHA_2.setVisible(false);        
     String [] titulos  = { "Contenido no disponible" };
           
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
      }
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void BUSCAR_FECHAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUSCAR_FECHAActionPerformed
    String busca = COMBO_BUSCA.getSelectedItem().toString();
       if(busca.equals("Persona")){ //---------------------CUANDO SE SELECCIONE LA OPCION GENERAL
    
           
           try{
                       Date dato1 = FECHA_1.getDate();
     Date dato2 = FECHA_2.getDate();
     if(dato1==null || dato2==null){
         JOptionPane.showMessageDialog(null,"Seleccionar una fecha valida","Aviso",JOptionPane.ERROR_MESSAGE);
     
     }else{
               
               
        String fecha1 = new SimpleDateFormat("yyyy-MM-dd").format(FECHA_1.getDate());
        String fecha2 = new SimpleDateFormat("yyyy-MM-dd").format(FECHA_2.getDate());
        String [] titulos  = {"Fecha inicial","Fech final","Total peticiones","Total dÃ­as", "Categoria","SubCategoria", "Atendido por" };
           
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
   jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(230);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(300);
         jTable1.getColumnModel().getColumn(6).setPreferredWidth(80);
    
    GregorianCalendar objFecha = new GregorianCalendar();
      int mes;
  mes=objFecha.get(Calendar.MONTH)+1;
    String sql = "select fecha_in_nohora, fecha_fin_nohora, total, sumdias, nombre_categoria, nombre_subcategoria, atendio from estadistico where fecha_in_nohora>='"+fecha1+"'and estadistico.fecha_in_nohora<='"+fecha2+"'and month(fecha_in_nohora)='"+mes+"'";
    Statement  sts = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        ResultSet rs = sts.executeQuery(sql);    
         String [] datos = new String [7];     
      while(rs.next()){
       datos[0] = rs.getString("fecha_in_nohora");    
       datos[1] = rs.getString("fecha_fin_nohora");
       datos[2] = rs.getString("total");
       datos[3] = rs.getString("sumdias");
       datos[4] = rs.getString("nombre_categoria");
       datos[5] = rs.getString("nombre_subcategoria");
       datos[6] = rs.getString("atendio");      
       modelo.addRow(datos);
       } 
 
           
           }
           }catch(Exception e){
 JOptionPane.showMessageDialog(null,"ERORR: "+JOptionPane.WARNING_MESSAGE+e);
 }     
      }
     
      
    if(busca.equals("General")){ //---------------------CUANDO SE SELECCIONE LA OPCION GENERAL
        
        try{
          
                       Date dato1 = FECHA_1.getDate();
     Date dato2 = FECHA_2.getDate();
     if(dato1==null || dato2==null){
         JOptionPane.showMessageDialog(null,"Seleccionar una fecha valida","Aviso",JOptionPane.ERROR_MESSAGE);
     
     }else{
            
            
            
        String fecha1 = new SimpleDateFormat("yyyy-MM-dd").format(FECHA_1.getDate());
        String fecha2 = new SimpleDateFormat("yyyy-MM-dd").format(FECHA_2.getDate());
        
        String [] titulos  = {"Fecha inicial","Fecha final","Total peticiones","Total dias", "Categoria","SubCategoria" };
           
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
     jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(230);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(300);
    GregorianCalendar objFecha = new GregorianCalendar();
      int mes;
  mes=objFecha.get(Calendar.MONTH)+1;
      String sql = "select fecha_in_nohora, fecha_fin_nohora, Peticiones, sumdias, nombre_categoria, nombre_subcategoria from vwsubcategoria where fecha_in_nohora>='"+fecha1+"'and vwsubcategoria.fecha_in_nohora<='"+fecha2+"'and month(fecha_in_nohora)='"+mes+"'";
     Statement st = con.createStatement();
       ResultSet rs = st.executeQuery(sql);
       String [] datos = new String [6];
       
       while(rs.next()){
       datos[0] = rs.getString("fecha_in_nohora");    
       datos[1] = rs.getString("fecha_fin_nohora");
       datos[2] = rs.getString("Peticiones");
       datos[3] = rs.getString("sumdias");
       datos[4] = rs.getString("nombre_categoria");
       datos[5] = rs.getString("nombre_subcategoria");

       
       modelo.addRow(datos);
       
       }
        }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"ERROR"+"MSG"+JOptionPane.WARNING_MESSAGE+e);
        }  
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_BUSCAR_FECHAActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
 JFileChooser dialog = new JFileChooser();
        int opcion = dialog.showSaveDialog(Estadistica_Subcategoria.this);

        if (opcion == JFileChooser.APPROVE_OPTION) {

            File dir = dialog.getSelectedFile();

            try {
                List<JTable> tb = new ArrayList<JTable>();
                tb.add(jTable1);
                //-------------------
                Exportar_excel excelExporter = new Exportar_excel(tb, new File(dir.getAbsolutePath() + ".xls"));
                if (excelExporter.export()) {
                    JOptionPane.showMessageDialog(null, "Correcto...");
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void BUSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BUSActionPerformed
String buscarCombo = COMBO_USUARIO.getSelectedItem().toString();
 //---------------------CUANDO SE SELECCIONE LA OPCION PERSONA            
        BUSCAR_FECHA.setVisible(true);
        FECHA_1.setVisible(true);
        FECHA_2.setVisible(true);   
      String [] titulos  = {"Fecha inicial","Fech final","Total peticiones","Total dÃ­as", "Categoria","SubCategoria", "Atendido por" };           
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(70);
        jTable1.getColumnModel().getColumn(4).setPreferredWidth(230);
        jTable1.getColumnModel().getColumn(5).setPreferredWidth(300);
         jTable1.getColumnModel().getColumn(6).setPreferredWidth(80);
    GregorianCalendar objFecha = new GregorianCalendar();
      int mes;
  mes=objFecha.get(Calendar.MONTH)+1;
    String sql = "select fecha_in_nohora, fecha_fin_nohora, total, sumdias, nombre_categoria, nombre_subcategoria, atendio from estadistico where atendio='"+buscarCombo+"'and month(fecha_in_nohora)='"+mes+"'";
        try{
       Statement st = con.createStatement();
       ResultSet rs = st.executeQuery(sql);
       String [] datos = new String [7];     
      while(rs.next()){
       datos[0] = rs.getString("fecha_in_nohora");    
       datos[1] = rs.getString("fecha_fin_nohora");
       datos[2] = rs.getString("total");
       datos[3] = rs.getString("sumdias");
       datos[4] = rs.getString("nombre_categoria");
       datos[5] = rs.getString("nombre_subcategoria");
       datos[6] = rs.getString("atendio");      
       modelo.addRow(datos);
       }  
        }catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERROR"+"MSG"+JOptionPane.WARNING_MESSAGE+e);
    }
        

// TODO add your handling code here:
    }//GEN-LAST:event_BUSActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BUS;
    private javax.swing.JButton BUSCAR_FECHA;
    private javax.swing.JComboBox COMBO_BUSCA;
    private javax.swing.JComboBox COMBO_USUARIO;
    private com.toedter.calendar.JDateChooser FECHA_1;
    private com.toedter.calendar.JDateChooser FECHA_2;
    private proyectoresidencia.BackgroundMenuBar backgroundMenuBar1;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
ProyectoResidencia cc = new ProyectoResidencia();
Connection con=cc.conexion();
}
