/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import static Interfaz.PeticionUsuario.ID_AREA;
import com.inet.jortho.FileUserDictionary;
import com.inet.jortho.SpellChecker;
import conexiones.ProyectoResidencia;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyectoresidencia.FondoAdmin;

/**
 *
 * @author Carlos Barahona
 */
public class Menu_usuarios extends javax.swing.JInternalFrame {
ProyectoResidencia cc = new ProyectoResidencia();
Connection con=cc.conexion();

    /**
     * Creates new form Menu_usuarios
     */
    public Menu_usuarios() {
        //setUndecorated(true);
        initComponents();
        Locacion();
     llenar();
     Perfil();
     
       //------------------------------------------------IMAGEN DE FONDO
        FondoAdmin p = new FondoAdmin("paso.jpg"); 
this.add( p , BorderLayout.EAST); 
p.repaint();


//CORRECTOR ORTOGRAFICO 
/*
 SpellChecker.setUserDictionaryProvider(new FileUserDictionary());
SpellChecker.registerDictionaries(null, null);
SpellChecker.register(NOMBRE);
SpellChecker.register(APELLIDO);
SpellChecker.register(CORREO);
SpellChecker.register(ID_USUARIO_LOGIN);
SpellChecker.register(CLAVE);*/
    }
    
  
    
    
     private void Perfil(){
 try{
 Statement stm = con.createStatement();
 ResultSet rs = stm.executeQuery("select * from perfil");
 String datos[] = new String[2];
 while(rs.next()){
     datos[0]=rs.getString(1);
     datos[1]=rs.getString(2);
     this.PERFIL.addItem(datos[0]+"-"+datos[1]);
 }    
 }catch(Exception e){
     JOptionPane.showMessageDialog(null,"Error en la conexion"+e);
 }
 }
    
    private void llenar()
    {
    String [] titulos ={"# Usuario","Lugar","Area","Perfil","Nombre","Apellido","Correo","ID Usuario","Clave","Fehca de creación"};
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    String sql ="select id_usuario, nombre_locacion, nombre_area, nombre_perfil, nombre, apellido, correo, usuario_login, clave, fecha_creacion_nohora from vwusuario"; 

    try{
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery(sql);
    String [] datos = new String[10];
    while(rs.next()){
    datos[0]= rs.getString(1);
    datos[1]= rs.getString(2);
    datos[2]= rs.getString(3);
    datos[3]= rs.getString(4);
    datos[4]= rs.getString(5);
    datos[5]= rs.getString(6);
    datos[6]= rs.getString(7);
    datos[7]= rs.getString(8);
    datos[8]= rs.getString(9);
    datos[9]= rs.getString(10);
    modelo.addRow(datos);
    
    
    }
    }catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERROR: "+e);
    }
    }
    
     void Locacion(){
 try{
 Statement stm = con.createStatement();
 ResultSet rs = stm.executeQuery("select * from locacion");
 String datos[] = new String[2];
 while(rs.next()){
     datos[0]=rs.getString(1);
     datos[1]=rs.getString(2);
     this.LOCACION.addItem(datos[0]+"-"+datos[1]);
 }    
 }catch(Exception e){
     JOptionPane.showMessageDialog(null,"Error en la conexion"+e);
 }
 }
     void UsuariosPorArea(){
     if(LOCACION.getSelectedIndex()>0){
         String sql ="select * from area_empresa where id_locacion=";
            sql+="'"+LOCACION.getSelectedItem().toString().split("-")[0]+"'";
         String [] datos = new String[3];
         try{
         Statement stm = con.createStatement();
 ResultSet rs = stm.executeQuery(sql);
 while(rs.next()){
     datos[0]=rs.getString("id_area"); //nombre de la columna que tomara de la BD
        datos[1]=rs.getString("nombre_area"); //nombre de la columna que tomara de la BD
 AREA.addItem(datos[0]+"-"+datos[1]); //new ComboItem(rs.getString("nombre"),rs.getString("id_usuario"))
 }
    }catch(Exception e){ JOptionPane.showMessageDialog(this, e.toString());}
     }
     }
     
     
  
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        Modificar = new javax.swing.JMenuItem();
        ID = new javax.swing.JTextField();
        uno = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        LOCACION = new javax.swing.JComboBox();
        AREA = new javax.swing.JComboBox();
        PERFIL = new javax.swing.JComboBox();
        NOMBRE = new proyectoresidencia.JCTextField();
        APELLIDO = new proyectoresidencia.JCTextField();
        CORREO = new proyectoresidencia.JCTextField();
        ID_USUARIO_LOGIN = new proyectoresidencia.JCTextField();
        CLAVE = new proyectoresidencia.JCTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        TIPO_BUSCAR = new javax.swing.JComboBox();
        ESCRIBIR = new proyectoresidencia.JCTextField();

        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Modificar);

        setClosable(true);
        setResizable(true);
        setTitle("Usuarios disponibles");

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setViewportView(jTable1);

        LOCACION.setBackground(new java.awt.Color(51, 51, 255));
        LOCACION.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar locación" }));
        LOCACION.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LOCACION.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LOCACIONItemStateChanged(evt);
            }
        });

        AREA.setBackground(new java.awt.Color(51, 51, 255));
        AREA.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar área" }));
        AREA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        PERFIL.setBackground(new java.awt.Color(51, 51, 255));
        PERFIL.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar perfil" }));
        PERFIL.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        NOMBRE.setPlaceholder("Nombre de usuario");
        NOMBRE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                NOMBREKeyTyped(evt);
            }
        });

        APELLIDO.setPlaceholder("Apellido de usuario");
        APELLIDO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                APELLIDOKeyTyped(evt);
            }
        });

        CORREO.setPlaceholder("Correo de usuario");
        CORREO.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CORREOKeyTyped(evt);
            }
        });

        ID_USUARIO_LOGIN.setPlaceholder("ID del usuario ");
        ID_USUARIO_LOGIN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ID_USUARIO_LOGINKeyTyped(evt);
            }
        });

        CLAVE.setPlaceholder("Clave de usuario");
        CLAVE.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CLAVEKeyTyped(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 102, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Registrar");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 102, 153));
        jButton2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Actuailzar");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 102, 153));
        jButton3.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Cancelar");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        TIPO_BUSCAR.setBackground(new java.awt.Color(51, 51, 255));
        TIPO_BUSCAR.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Buscar por", "Locacion", "Area", "Perfil", "Nombre" }));
        TIPO_BUSCAR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        ESCRIBIR.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        ESCRIBIR.setPlaceholder("Escribir busqueda");
        ESCRIBIR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ESCRIBIRKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ESCRIBIRKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LOCACION, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AREA, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PERFIL, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NOMBRE, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(APELLIDO, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CORREO, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ID_USUARIO_LOGIN, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CLAVE, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(6, 6, 6)
                        .addComponent(jButton2)
                        .addGap(6, 6, 6)
                        .addComponent(jButton3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(TIPO_BUSCAR, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ESCRIBIR, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1012, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TIPO_BUSCAR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ESCRIBIR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LOCACION, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(AREA, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(PERFIL, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(NOMBRE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(APELLIDO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(CORREO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(ID_USUARIO_LOGIN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(CLAVE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LOCACIONItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LOCACIONItemStateChanged
if(LOCACION.getSelectedIndex()>-1){
            AREA.removeAllItems();
            AREA.addItem("Área");
            UsuariosPorArea();
        }        // TODO add your handling code here:
    }//GEN-LAST:event_LOCACIONItemStateChanged

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
this.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
try{
         String VerificarArea =  (String) AREA.getSelectedItem(); //CONVIERTE EL JCOMBOBOX A STRING 
         String AREACOMBO[] = VerificarArea.split("-");
         Integer ResVerificar = Integer.parseInt(AREACOMBO[0]);
         uno.setText(""+ResVerificar);
     Statement st = con.createStatement();
     //     ResultSet resultado = st.executeQuery("select nombre, usuario_login from usuario where usuario.nombre like'"+NOMBRE.getText()+"'"); //and usuario.usuario_login='"+ID_USUARIO_LOGIN.getText()+"'and usuario.id_area='"+uno.getText()+"'

     ResultSet resultado = st.executeQuery("select usuario_login from usuario where usuario.usuario_login like'"+ID_USUARIO_LOGIN.getText()+"'"); //"'and usuario.id_area='"+uno.getText()+"'
if (resultado.next()==true){  //insert id en cliente.codecliente
    JOptionPane.showMessageDialog(null,"El usuario ya existe!","Aviso",JOptionPane.WARNING_MESSAGE);
   /* Statement st2 = con.createStatement();
    ResultSet rs = st2.executeQuery("select id_area from usuario where id_area='"+uno.getText()+"'");
    if(rs.next()==true){
    JOptionPane.showMessageDialog(null,"El usuario ya existe!","Aviso",JOptionPane.WARNING_MESSAGE);
    
    }else{}*/
    
}else{  
if(NOMBRE.getText().equals("") || APELLIDO.getText().equals("") || CORREO.getText().equals("") || ID_USUARIO_LOGIN.getText().equals("") || CLAVE.getText().equals("") || AREA.getSelectedItem().equals("Seleccionar área") || PERFIL.getSelectedItem().equals("Seleccionar perfil")  || AREA.getSelectedItem().equals("Área")){//Área 
    JOptionPane.showMessageDialog(null, "Campos vacíos","Aviso",JOptionPane.ERROR_MESSAGE);
}else{  
     java.util.Date date= new java.util.Date();
     System.out.println(new Timestamp(date.getTime()));
         
     String sql ="insert into usuario(id_area, id_perfil, nombre, apellido, correo, usuario_login, clave, fecha_creacion, creado_por) values (?,?,?,?,?,?,?,?,?)";
        
       String unoCombo =  (String) AREA.getSelectedItem(); //CONVIERTE EL JCOMBOBOX A STRING 
       String decomponerCOMBO[] = unoCombo.split("-");
       Integer resultadoCombo = Integer.parseInt(decomponerCOMBO[0]);
       
       String Perfil =  (String) PERFIL.getSelectedItem(); //CONVIERTE EL JCOMBOBOX A STRING 
       String PerfilOp[] = Perfil.split("-");
       Integer ResPerfil = Integer.parseInt(PerfilOp[0]);
try{
  PreparedStatement pst = con.prepareStatement(sql);
  pst.setInt(1, resultadoCombo); 
  pst.setInt(2, ResPerfil); 
  pst.setString(3, NOMBRE.getText()); 
  pst.setString(4, APELLIDO.getText()); 
  pst.setString(5, CORREO.getText()); 
  pst.setString(6, ID_USUARIO_LOGIN.getText()); 
  pst.setString(7, CLAVE.getText()); 
  pst.setTimestamp(8,new Timestamp(date.getTime()) ); //FECHA
  pst.setString(9, Administrador.ADMIN_CONECTADO.getText()); //LO SACA DEL ADMINISTRADOR, ADMIN_CONECTADO
  int n= pst.executeUpdate();
if(n>0){
    llenar();
AREA.setSelectedIndex(0);
PERFIL.setSelectedIndex(0);
LOCACION.setSelectedIndex(0);
NOMBRE.setText(null);
APELLIDO.setText(null);
CORREO.setText(null);
ID_USUARIO_LOGIN.setText(null);
CLAVE.setText(null);
}   
}catch(Exception e){
 JOptionPane.showMessageDialog(null,"ERROR"+e);
}
}
llenar();
}
}catch(Exception e){
JOptionPane.showMessageDialog(null,"ERROR "+e);
}
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
jButton2.setEnabled(true);
jButton1.setVisible(false);
        int fila = jTable1.getSelectedRow();
 if(fila>=0){
         ID.setText(jTable1.getValueAt(fila, 0).toString());            
         NOMBRE.setText(jTable1.getValueAt(fila, 4).toString());
         APELLIDO.setText(jTable1.getValueAt(fila, 5).toString());
         CORREO.setText(jTable1.getValueAt(fila, 6).toString());
         ID_USUARIO_LOGIN.setText(jTable1.getValueAt(fila, 7).toString());
         CLAVE.setText(jTable1.getValueAt(fila, 8).toString()); 
 }        // TODO add your handling code here:
    }//GEN-LAST:event_ModificarActionPerformed

    private void ESCRIBIRKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ESCRIBIRKeyTyped
char c = evt.getKeyChar();
if(Character.isDigit(c)){
getToolkit().beep();
evt.consume();
JOptionPane.showMessageDialog(null,"Carácter no permitido","Aviso",JOptionPane.ERROR_MESSAGE);
ESCRIBIR.setCursor(null);
}
else if((int)evt.getKeyChar()>32 && (int)evt.getKeyChar()<=47 
        || (int)evt.getKeyChar()>57 && (int)evt.getKeyChar()<=64 ||
        (int)evt.getKeyChar()>90 && (int)evt.getKeyChar()<=96 || 
        (int)evt.getKeyChar()>122 && (int)evt.getKeyChar()<=255
        ){

getToolkit().beep();
evt.consume();
JOptionPane.showMessageDialog(null,"Carácter no permitido","Aviso",JOptionPane.ERROR_MESSAGE);
ESCRIBIR.setCursor(null);
        
}
        
// TODO add your handling code here:
    }//GEN-LAST:event_ESCRIBIRKeyTyped

    private void ESCRIBIRKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ESCRIBIRKeyReleased

String combo = TIPO_BUSCAR.getSelectedItem().toString();

        if(combo.equals("Buscar por")){
 String [] titulos ={"# Usuario","Lugar","Area","Perfil","Nombre","Apellido","Correo","ID Usuario","Clave","Fehca de creación"};
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    String sql ="select id_usuario, nombre_locacion, nombre_area, nombre_perfil, nombre, apellido, correo, usuario_login, clave, fecha_creacion_nohora from vwusuario"; 
    
    try{
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery(sql);
    String [] datos = new String[10];
    while(rs.next()){
    datos[0]= rs.getString(1);
    datos[1]= rs.getString(2);
    datos[2]= rs.getString(3);
    datos[3]= rs.getString(4);
    datos[4]= rs.getString(5);
    datos[5]= rs.getString(6);
    datos[6]= rs.getString(7);
    datos[7]= rs.getString(8);
    datos[8]= rs.getString(9);
    datos[9]= rs.getString(10);
    modelo.addRow(datos);
    
    
    }
    }catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERROR: "+e);
    }
    
}

if(combo.equals("Locacion")){
  String [] titulos ={"# Usuario","Lugar","Area","Perfil","Nombre","Apellido","Correo","ID Usuario","Clave","Fehca de creación"};
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    String sql ="select id_usuario, nombre_locacion, nombre_area, nombre_perfil, nombre, apellido, correo, usuario_login, clave, fecha_creacion_nohora from vwusuario where nombre_locacion='"+ESCRIBIR.getText()+"'"; 
     try{
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery(sql);
    String [] datos = new String[10];
    while(rs.next()){
    datos[0]= rs.getString(1);
    datos[1]= rs.getString(2);
    datos[2]= rs.getString(3);
    datos[3]= rs.getString(4);
    datos[4]= rs.getString(5);
    datos[5]= rs.getString(6);
    datos[6]= rs.getString(7);
    datos[7]= rs.getString(8);
    datos[8]= rs.getString(9);
    datos[9]= rs.getString(10);
    modelo.addRow(datos);
    
    
    }
    }catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERROR: "+e);
    }
    
}  

if(combo.equals("Area")){
    
    String [] titulos ={"# Usuario","Lugar","Area","Perfil","Nombre","Apellido","Correo","ID Usuario","Clave","Fehca de creación"};
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    String sql ="select id_usuario, nombre_locacion, nombre_area, nombre_perfil, nombre, apellido, correo, usuario_login, clave, fecha_creacion_nohora from vwusuario where nombre_area='"+ESCRIBIR.getText()+"'"; 
     try{
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery(sql);
    String [] datos = new String[10];
    while(rs.next()){
    datos[0]= rs.getString(1);
    datos[1]= rs.getString(2);
    datos[2]= rs.getString(3);
    datos[3]= rs.getString(4);
    datos[4]= rs.getString(5);
    datos[5]= rs.getString(6);
    datos[6]= rs.getString(7);
    datos[7]= rs.getString(8);
    datos[8]= rs.getString(9);
    datos[9]= rs.getString(10);
    modelo.addRow(datos);
    
    
    }
    }catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERROR: "+e);
    }

}

if(combo.equals("Perfil")){
String [] titulos ={"# Usuario","Lugar","Area","Perfil","Nombre","Apellido","Correo","ID Usuario","Clave","Fehca de creación"};
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    String sql ="select id_usuario, nombre_locacion, nombre_area, nombre_perfil, nombre, apellido, correo, usuario_login, clave, fecha_creacion_nohora from vwusuario where nombre_perfil='"+ESCRIBIR.getText()+"'"; 
     try{
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery(sql);
    String [] datos = new String[10];
    while(rs.next()){
    datos[0]= rs.getString(1);
    datos[1]= rs.getString(2);
    datos[2]= rs.getString(3);
    datos[3]= rs.getString(4);
    datos[4]= rs.getString(5);
    datos[5]= rs.getString(6);
    datos[6]= rs.getString(7);
    datos[7]= rs.getString(8);
    datos[8]= rs.getString(9);
    datos[9]= rs.getString(10);
    modelo.addRow(datos);
    
    
    }
    }catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERROR: "+e);
    }
    
} 

if(combo.equals("Nombre")){

    String [] titulos ={"# Usuario","Lugar","Area","Perfil","Nombre","Apellido","Correo","ID Usuario","Clave","Fehca de creación"};
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    String sql ="select id_usuario, nombre_locacion, nombre_area, nombre_perfil, nombre, apellido, correo, usuario_login, clave, fecha_creacion_nohora from vwusuario where nombre='"+ESCRIBIR.getText()+"'"; 
     try{
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery(sql);
    String [] datos = new String[10];
    while(rs.next()){
    datos[0]= rs.getString(1);
    datos[1]= rs.getString(2);
    datos[2]= rs.getString(3);
    datos[3]= rs.getString(4);
    datos[4]= rs.getString(5);
    datos[5]= rs.getString(6);
    datos[6]= rs.getString(7);
    datos[7]= rs.getString(8);
    datos[8]= rs.getString(9);
    datos[9]= rs.getString(10);
    modelo.addRow(datos);
    
    
    }
    }catch(Exception e){
    JOptionPane.showMessageDialog(null,"ERROR: "+e);
    }
    
}         
// TODO add your handling code here:
    }//GEN-LAST:event_ESCRIBIRKeyReleased

    private void NOMBREKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NOMBREKeyTyped
char c = evt.getKeyChar();
if(Character.isDigit(c)){
getToolkit().beep();
evt.consume();
JOptionPane.showMessageDialog(null,"Carácter no permitido","Aviso",JOptionPane.ERROR_MESSAGE);
NOMBRE.setCursor(null);
}
else if((int)evt.getKeyChar()>32 && (int)evt.getKeyChar()<=47 
        || (int)evt.getKeyChar()>57 && (int)evt.getKeyChar()<=64 ||
        (int)evt.getKeyChar()>90 && (int)evt.getKeyChar()<=96 || 
        (int)evt.getKeyChar()>122 && (int)evt.getKeyChar()<=255
        ){

getToolkit().beep();
evt.consume();
JOptionPane.showMessageDialog(null,"Carácter no permitido","Aviso",JOptionPane.ERROR_MESSAGE);
NOMBRE.setCursor(null);
}


//VERIFICAR USUARIOS EN TIEMPO REAL
try{
         String VerificarArea =  (String) AREA.getSelectedItem(); //CONVIERTE EL JCOMBOBOX A STRING 
         String AREACOMBO[] = VerificarArea.split("-");
         Integer ResVerificar = Integer.parseInt(AREACOMBO[0]);
         //uno.setText(""+ResVerificar);
         
     Statement st = con.createStatement();
     ResultSet resultado = st.executeQuery("select nombre from usuario where usuario.nombre like'"+NOMBRE.getText()+"'and usuario.id_area='"+ResVerificar+"'");
if (resultado.next()==true){  //insert id en cliente.codecliente
    JOptionPane.showMessageDialog(null,"El usuario ya existe!","Aviso",JOptionPane.WARNING_MESSAGE);
}
}catch(Exception e){

}

// TODO add your handling code here:
    }//GEN-LAST:event_NOMBREKeyTyped

    private void APELLIDOKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_APELLIDOKeyTyped
char c = evt.getKeyChar();
if(Character.isDigit(c)){
getToolkit().beep();
evt.consume();
JOptionPane.showMessageDialog(null,"Carácter no permitido","Aviso",JOptionPane.ERROR_MESSAGE);
APELLIDO.setCursor(null);
}
else if((int)evt.getKeyChar()>32 && (int)evt.getKeyChar()<=47 
        || (int)evt.getKeyChar()>57 && (int)evt.getKeyChar()<=64 ||
        (int)evt.getKeyChar()>90 && (int)evt.getKeyChar()<=96 || 
        (int)evt.getKeyChar()>122 && (int)evt.getKeyChar()<=255
        ){

getToolkit().beep();
evt.consume();
JOptionPane.showMessageDialog(null,"Carácter no permitido","Aviso",JOptionPane.ERROR_MESSAGE);
APELLIDO.setCursor(null);
}        // TODO add your handling code here:
    }//GEN-LAST:event_APELLIDOKeyTyped

    private void ID_USUARIO_LOGINKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ID_USUARIO_LOGINKeyTyped
char c = evt.getKeyChar();

 if((int)evt.getKeyChar()>32 && (int)evt.getKeyChar()<=47 
        || (int)evt.getKeyChar()>57 && (int)evt.getKeyChar()<=64 ||
        (int)evt.getKeyChar()>90 && (int)evt.getKeyChar()<=96 || 
        (int)evt.getKeyChar()>122 && (int)evt.getKeyChar()<=255
        ){

getToolkit().beep();
evt.consume();
JOptionPane.showMessageDialog(null,"Carácter no permitido","Aviso",JOptionPane.ERROR_MESSAGE);
LOCACION.setCursor(null);
}       // TODO add your handling code here:
    }//GEN-LAST:event_ID_USUARIO_LOGINKeyTyped

    private void CLAVEKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CLAVEKeyTyped
char c = evt.getKeyChar();

 if((int)evt.getKeyChar()>32 && (int)evt.getKeyChar()<=47 
        || (int)evt.getKeyChar()>57 && (int)evt.getKeyChar()<=64 ||
        (int)evt.getKeyChar()>90 && (int)evt.getKeyChar()<=96 || 
        (int)evt.getKeyChar()>122 && (int)evt.getKeyChar()<=255
        ){

getToolkit().beep();
evt.consume();
JOptionPane.showMessageDialog(null,"Carácter no permitido","Aviso",JOptionPane.ERROR_MESSAGE);
LOCACION.setCursor(null);
}
        // TODO add your handling code here:
    }//GEN-LAST:event_CLAVEKeyTyped

    private void CORREOKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CORREOKeyTyped

 if((int)evt.getKeyChar()>32 && (int)evt.getKeyChar()<=44 
        || (int)evt.getKeyChar()>57 && (int)evt.getKeyChar()<=63 ||
        (int)evt.getKeyChar()>90 && (int)evt.getKeyChar()<=94 || 
        (int)evt.getKeyChar()>122 && (int)evt.getKeyChar()<=255
        ){

getToolkit().beep();
evt.consume();
JOptionPane.showMessageDialog(null,"Carácter no permitido","Aviso",JOptionPane.ERROR_MESSAGE);
LOCACION.setCursor(null);
}
        
         

// TODO add your handling code here:
    }//GEN-LAST:event_CORREOKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//-----------------------------------------------------------ASIGNA UN USUARIO-ADMINISTRADOR ESA PETICION
        String area =  (String) AREA.getSelectedItem(); //CONVIERTE EL JCOMBOBOX A STRING 
       String decomponerCOMBO[] = area.split("-");
       Integer resultadoArea = Integer.parseInt(decomponerCOMBO[0]);    
       
        String perfil =  (String) PERFIL.getSelectedItem(); //CONVIERTE EL JCOMBOBOX A STRING 
       String decomponerPERFIL[] = perfil.split("-");
       Integer resultadoPerfil = Integer.parseInt(decomponerPERFIL[0]); 
try{    
    PreparedStatement pst = con.prepareStatement("UPDATE usuario SET id_area='"+resultadoArea+"',id_perfil='"+resultadoPerfil+"',nombre='"+NOMBRE.getText()+"',apellido='"+APELLIDO.getText()+"',correo='"+CORREO.getText()+"',usuario_login='"+ID_USUARIO_LOGIN.getText()+"',clave='"+CLAVE.getText()+"'WHERE id_usuario='"+ID.getText()+"'");        
    int n =pst.executeUpdate();
    
    if(n>0){
        JOptionPane.showMessageDialog(null,"Acutalización exitosa","Aviso",JOptionPane.INFORMATION_MESSAGE);
            llenar();//MUESTRA LOS CAMBIOS ACTUALIZANDO LA TABLA
AREA.setSelectedIndex(0);
LOCACION.setSelectedIndex(0);
NOMBRE.setText(null);
APELLIDO.setText(null);
CORREO.setText(null);
ID_USUARIO_LOGIN.setText(null);
CLAVE.setText(null);
    
    }

}catch(Exception e){
JOptionPane.showMessageDialog(null,"Error"+e);
}
 
jButton1.setVisible(true);
ID.setText(null);


// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private proyectoresidencia.JCTextField APELLIDO;
    private javax.swing.JComboBox AREA;
    private proyectoresidencia.JCTextField CLAVE;
    private proyectoresidencia.JCTextField CORREO;
    private proyectoresidencia.JCTextField ESCRIBIR;
    private javax.swing.JTextField ID;
    private proyectoresidencia.JCTextField ID_USUARIO_LOGIN;
    private javax.swing.JComboBox LOCACION;
    private javax.swing.JMenuItem Modificar;
    private proyectoresidencia.JCTextField NOMBRE;
    private javax.swing.JComboBox PERFIL;
    private javax.swing.JComboBox TIPO_BUSCAR;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField uno;
    // End of variables declaration//GEN-END:variables
}
