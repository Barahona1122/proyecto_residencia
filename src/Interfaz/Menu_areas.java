/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import conexiones.ProyectoResidencia;
import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyectoresidencia.FondoAdmin;
import proyectoresidencia.Fondo_Locacion;

/**
 *
 * @author Carlos Barahona
 */
public class Menu_areas extends javax.swing.JInternalFrame {

    /**
     * Creates new form Menu_areas
     */
    public Menu_areas() {
        initComponents();
        llenar();
        Mostrar();
        
          //------------------------------------------------IMAGEN DE FONDO
        FondoAdmin p = new FondoAdmin("paso.jpg"); 
this.add( p , BorderLayout.EAST); 
p.repaint();
        
    }
    private void llenar(){
    String [] titulos = {"# Área", "Nombre del área","Nombre de la locacion"};
     DefaultTableModel modelo = new DefaultTableModel(null,titulos);
    jTable1.setModel(modelo);
    String sql="select id_area,nombre_area,nombre_locacion from vwareas";
    try{
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery(sql);
    String [] datos = new String[4];
    while(rs.next()){
    datos[0]=rs.getString("id_area");
    datos[1]=rs.getString("nombre_area");
    datos[2]=rs.getString("nombre_locacion");
    modelo.addRow(datos);
    }
    
    }catch(Exception e){
        JOptionPane.showMessageDialog(null,"ERROR: "+"MSG"+JOptionPane.WARNING_MESSAGE+e);
    }
    
    }
    
   private void Mostrar(){
           //this.SOPORTE.removeAllItems();
 try{
 Statement stm = con.createStatement();
 ResultSet rs = stm.executeQuery("select * from locacion");
 String datos[] = new String[3];
 
 while(rs.next()){
 
     datos[0]=rs.getString(1);
     datos[1]=rs.getString(2);
     this.LOCACION.addItem(datos[0]+"-"+datos[1]);
 }    
 }catch(Exception e){
     JOptionPane.showMessageDialog(null,"Error en la conexion"+e);
 }
         }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ID_AREA = new proyectoresidencia.JCTextField();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        MODIFICAR = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        AGREGAR = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        AREA = new proyectoresidencia.JCTextField();
        LOCACION = new javax.swing.JComboBox();
        ACTUALIZAR = new javax.swing.JButton();

        ID_AREA.setEnabled(false);
        ID_AREA.setPlaceholder("ID");

        MODIFICAR.setText("Modificar");
        MODIFICAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MODIFICARActionPerformed(evt);
            }
        });
        jPopupMenu1.add(MODIFICAR);

        setClosable(true);
        setIconifiable(true);
        setTitle("Áreas disponibles");
        setToolTipText("");

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setComponentPopupMenu(jPopupMenu1);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        AGREGAR.setBackground(new java.awt.Color(0, 102, 153));
        AGREGAR.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        AGREGAR.setForeground(new java.awt.Color(255, 255, 255));
        AGREGAR.setText("Registrar");
        AGREGAR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AGREGAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AGREGARActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 102, 153));
        jButton2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Cancelar");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        AREA.setPlaceholder("Nombre del área");
        AREA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                AREAMousePressed(evt);
            }
        });
        AREA.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                AREAKeyTyped(evt);
            }
        });

        LOCACION.setBackground(new java.awt.Color(51, 51, 255));
        LOCACION.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar locacion" }));
        LOCACION.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOCACIONActionPerformed(evt);
            }
        });

        ACTUALIZAR.setBackground(new java.awt.Color(0, 102, 153));
        ACTUALIZAR.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        ACTUALIZAR.setForeground(new java.awt.Color(255, 255, 255));
        ACTUALIZAR.setText("Actualizar");
        ACTUALIZAR.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ACTUALIZAR.setEnabled(false);
        ACTUALIZAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACTUALIZARActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AGREGAR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ACTUALIZAR)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LOCACION, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AREA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 489, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(149, Short.MAX_VALUE)
                .addComponent(LOCACION, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AREA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AGREGAR)
                    .addComponent(jButton2)
                    .addComponent(ACTUALIZAR))
                .addGap(110, 110, 110))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void LOCACIONActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOCACIONActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LOCACIONActionPerformed

    private void AGREGARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AGREGARActionPerformed
try{
 
     Statement st = con.createStatement();
     ResultSet resultado = st.executeQuery("select nombre_area from area_empresa where area_empresa.nombre_area like'"+AREA.getText()+"'");
if (resultado.next()==true){  //insert id en cliente.codecliente
    JOptionPane.showMessageDialog(null,"El registro ya existe \n por favor ingresa otro");
}else{
        
        if(AREA.getText().equals("") || LOCACION.getSelectedItem().equals("Seleccionar locacion")){ 
    JOptionPane.showMessageDialog(null, "Campo vacío","Aviso",JOptionPane.ERROR_MESSAGE);
}else{
     String unoCombo =  (String) LOCACION.getSelectedItem(); //CONVIERTE EL JCOMBOBOX A STRING 
       String decomponerCOMBO[] = unoCombo.split("-");
       Integer locacion_area = Integer.parseInt(decomponerCOMBO[0]);
    String sql ="insert into area_empresa(id_locacion, nombre_area) values (?,?)";
try{
  PreparedStatement pst = con.prepareStatement(sql);
  pst.setInt(1, locacion_area);                
  pst.setString(2, AREA.getText()); 
  int n= pst.executeUpdate();
  
if(n>0){
AREA.setText(null);
LOCACION.setSelectedIndex(0);
}
 llenar();   
}catch(Exception e){
 JOptionPane.showMessageDialog(null,"ERROR"+e);
}
}
        
} //FIN DEL ELSE
}catch(Exception ex){

}
// TODO add your handling code here:
    }//GEN-LAST:event_AGREGARActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed

        
// TODO add your handling code here:
    }//GEN-LAST:event_jTable1MousePressed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
      // TODO add your handling code here:
    }//GEN-LAST:event_jTable1KeyPressed

    private void ACTUALIZARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACTUALIZARActionPerformed
  if(LOCACION.getSelectedItem().equals("Seleccionar locacion") || ID_AREA.getText().equals("")&& AREA.getText().equals(""))
       {
         JOptionPane.showMessageDialog(null,"Campos vacíos","Aviso",JOptionPane.ERROR_MESSAGE);
       }else{
        String unoCombo =  (String) LOCACION.getSelectedItem(); //CONVIERTE EL JCOMBOBOX A STRING 
       String decomponerCOMBO[] = unoCombo.split("-");
       Integer resultadoCombo = Integer.parseInt(decomponerCOMBO[0]);  
 
       try{
    PreparedStatement pst = con.prepareStatement("UPDATE area_empresa SET nombre_area='"+AREA.getText()+"' WHERE id_area='"+ID_AREA.getText()+"'");
            pst.executeUpdate();     
}catch(Exception e){
JOptionPane.showMessageDialog(null,"Error"+e);
}
            try{
    PreparedStatement pst = con.prepareStatement("UPDATE area_empresa SET id_locacion='"+resultadoCombo+"' WHERE id_area='"+ID_AREA.getText()+"'");
            pst.executeUpdate();      
}catch(Exception e){
JOptionPane.showMessageDialog(null,"Error"+e);
}      
            AREA.setText(null);
            LOCACION.setSelectedIndex(0);
            ID_AREA.setText(null);
       }
           llenar();      
        
// TODO add your handling code here:
    }//GEN-LAST:event_ACTUALIZARActionPerformed

    private void MODIFICARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MODIFICARActionPerformed
  ACTUALIZAR.setEnabled(true);
AGREGAR.setVisible(false);
        int fila = jTable1.getSelectedRow();
 if(fila>=0){
   
     ID_AREA.setText(jTable1.getValueAt(fila, 0).toString());            
            AREA.setText(jTable1.getValueAt(fila, 1).toString());
 }        // TODO add your handling code here:
    }//GEN-LAST:event_MODIFICARActionPerformed

    private void AREAKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AREAKeyTyped
char c = evt.getKeyChar();
if(Character.isDigit(c)){
getToolkit().beep();
evt.consume();
JOptionPane.showMessageDialog(null,"Carácter no permitido","Aviso",JOptionPane.ERROR_MESSAGE);
AREA.setCursor(null);
}
else if((int)evt.getKeyChar()>32 && (int)evt.getKeyChar()<=47 
        || (int)evt.getKeyChar()>57 && (int)evt.getKeyChar()<=64 ||
        (int)evt.getKeyChar()>90 && (int)evt.getKeyChar()<=96 || 
        (int)evt.getKeyChar()>122 && (int)evt.getKeyChar()<=255
        ){

getToolkit().beep();
evt.consume();
JOptionPane.showMessageDialog(null,"Carácter no permitido","Aviso",JOptionPane.ERROR_MESSAGE);
AREA.setCursor(null);
}        // TODO add your handling code here:
    }//GEN-LAST:event_AREAKeyTyped

    private void AREAMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AREAMousePressed
   //AREA.setBorder(BorderFactory.createLineBorder(new Color(0,120,215), 2, true)); //[0,120,215]
          // TODO add your handling code here:
    }//GEN-LAST:event_AREAMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ACTUALIZAR;
    private javax.swing.JButton AGREGAR;
    private proyectoresidencia.JCTextField AREA;
    private proyectoresidencia.JCTextField ID_AREA;
    private javax.swing.JComboBox LOCACION;
    private javax.swing.JMenuItem MODIFICAR;
    private javax.swing.JButton jButton2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
ProyectoResidencia cc = new ProyectoResidencia();
Connection con=cc.conexion();
}
