/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import conexiones.ProyectoResidencia;
import java.awt.BorderLayout;
import java.io.File;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import proyectoresidencia.Exportar_excel;
import proyectoresidencia.FondoAdmin;
import proyectoresidencia.MiRender;

/**
 *
 * @author Carlos Barahona
 */
public class Historia_Peticiones extends javax.swing.JInternalFrame {

    /**
     * Creates new form Historia_Peticiones
     */
    public Historia_Peticiones() {
        initComponents();
        llenar();
        FondoAdmin p = new FondoAdmin("paso.jpg"); 
this.add( p , BorderLayout.EAST); 
p.repaint();

//--------------ICONO PARA EL CALENDARIO

URL url = getClass().getResource("/iconos/calendario.png");  
FECHA_INICIO.setIcon(new ImageIcon(url)); 

URL url2 = getClass().getResource("/iconos/calendario.png");  
FECHA_FINAL.setIcon(new ImageIcon(url2)); 

    }
    
      private void llenar(){
    String [] titulos = {"# Tarea","Fecha inicial","Fecha final","Hora","Lugar",
        "Area","Usuario","Problema","Nota","Realizado por", "Estado"};
    
     GregorianCalendar objFecha = new GregorianCalendar();
      int mes;
  mes=objFecha.get(Calendar.MONTH)+1;
    
    String sql = "select id_peticion, fecha_in_nohora,fecha_fin_nohora, fecha_in_hora,nombre_locacion,"
            + "nombre_area,nombre,nombre_problema,nota ,nombre_atiende, nombre_estado from vista_principal where id_estado=0";
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    try{
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery(sql);
    String [] datos = new String [11];
    while(rs.next()){
    datos[0] = rs.getString("id_peticion");
    datos[1] = rs.getString("fecha_in_nohora");
    datos[2] = rs.getString("fecha_fin_nohora"); //cambiar a FECHA FINAL 
    datos[3] = rs.getString("fecha_in_hora"); //HORA DE LA PETICION
    datos[4] = rs.getString("nombre_locacion");
    datos[5] = rs.getString("nombre_area");
    datos[6] = rs.getString("nombre");
    datos[7] = rs.getString("nombre_problema");
    datos[8] = rs.getString("nota");
    datos[9] = rs.getString("nombre_atiende");
    datos[10] = rs.getString("nombre_estado");
    modelo.addRow(datos);
      jTable1.setDefaultRenderer(Object.class, new MiRender()); //COLOREA UNA CELDA EN ESPECIFICO
      
          int[] anchos = {40, 80, 50, 50,70,100,50,300,210,70,70}; //ASIGNAR TAMAÃ‘O A CADA UNA DE LAS CELDAS
for(int i = 0; i < jTable1.getColumnCount(); i++) {
jTable1.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
}
    }
    }catch(Exception ex){
    JOptionPane.showMessageDialog(null,"ERROR"+ex);
    }
    
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        FECHA_INICIO = new com.toedter.calendar.JDateChooser();
        FECHA_FINAL = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        backgroundMenuBar1 = new proyectoresidencia.BackgroundMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        setTitle("Historial de peticiones");

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setGridColor(new java.awt.Color(0, 51, 51));
        jScrollPane1.setViewportView(jTable1);

        FECHA_INICIO.setDateFormatString("yyyy-MM-dd");

        FECHA_FINAL.setDateFormatString("yyyy-MM-dd");

        jButton1.setBackground(new java.awt.Color(0, 102, 153));
        jButton1.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Buscar");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 102, 153));
        jButton2.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Mostrar todo");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("Archivo");
        jMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenu1.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Guardar");
        jMenuItem1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Salir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        backgroundMenuBar1.add(jMenu1);

        setJMenuBar(backgroundMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(FECHA_INICIO, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FECHA_FINAL, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 712, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(FECHA_INICIO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FECHA_FINAL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
try{
    
                        Date dato1 = FECHA_INICIO.getDate();
     Date dato2 = FECHA_FINAL.getDate();
     if(dato1==null || dato2==null){
         JOptionPane.showMessageDialog(null,"Seleccionar una fecha valida","Aviso",JOptionPane.ERROR_MESSAGE);
     
     }else{
    
    
     String fecha1 = new SimpleDateFormat("yyyy-MM-dd").format(FECHA_INICIO.getDate());
        String fecha2 = new SimpleDateFormat("yyyy-MM-dd").format(FECHA_FINAL.getDate());
        

        String [] titulos = {"# Tarea","Fecha inicial","Fecha final","Hora","Lugar",
        "Area","Usuario","Problema","Nota","Realizado por", "Estado"};
    
     GregorianCalendar objFecha = new GregorianCalendar();
      int mes;
  mes=objFecha.get(Calendar.MONTH)+1;
    
    String sql = "select id_peticion, fecha_in_nohora,fecha_fin_nohora, fecha_in_hora,nombre_locacion,"
            + "nombre_area,nombre,nombre_problema,nota, nombre_atiende, nombre_estado from vista_principal where fecha_in_nohora>='"+fecha1 +"'and vista_principal.fecha_in_nohora<='"+fecha2+"' and id_estado=0";
    DefaultTableModel modelo = new DefaultTableModel(null, titulos);
    jTable1.setModel(modelo);
    
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery(sql);
    String [] datos = new String [11];
    while(rs.next()){
    datos[0] = rs.getString("id_peticion");
    datos[1] = rs.getString("fecha_in_nohora");
    datos[2] = rs.getString("fecha_fin_nohora"); //cambiar a FECHA FINAL 
    datos[3] = rs.getString("fecha_in_hora"); //HORA DE LA PETICION
    datos[4] = rs.getString("nombre_locacion");
    datos[5] = rs.getString("nombre_area");
    datos[6] = rs.getString("nombre");
    datos[7] = rs.getString("nombre_problema");
    datos[8] = rs.getString("nota");
    datos[9] = rs.getString("nombre_atiende");
    datos[10] = rs.getString("nombre_estado");
    modelo.addRow(datos);
      jTable1.setDefaultRenderer(Object.class, new MiRender()); //COLOREA UNA CELDA EN ESPECIFICO
      
          int[] anchos = {40, 80, 50, 50,70,100,50,300,70,70}; //ASIGNAR TAMAÃ‘O A CADA UNA DE LAS CELDAS
for(int i = 0; i < jTable1.getColumnCount(); i++) {
jTable1.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
}
    }
}
    }catch(Exception ex){
    JOptionPane.showMessageDialog(null,"ERROR"+ex);
    }
        
        

// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
 JFileChooser dialog = new JFileChooser();
        int opcion = dialog.showSaveDialog(Historia_Peticiones.this);

        if (opcion == JFileChooser.APPROVE_OPTION) {

            File dir = dialog.getSelectedFile();

            try {
                List<JTable> tb = new ArrayList<JTable>();
                tb.add(jTable1);
                //-------------------
                Exportar_excel excelExporter = new Exportar_excel(tb, new File(dir.getAbsolutePath() + ".xls"));
                if (excelExporter.export()) {
                    JOptionPane.showMessageDialog(null, "Correcto...");
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
llenar();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser FECHA_FINAL;
    private com.toedter.calendar.JDateChooser FECHA_INICIO;
    private proyectoresidencia.BackgroundMenuBar backgroundMenuBar1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
ProyectoResidencia cc = new ProyectoResidencia();
Connection con=cc.conexion();
}
